# Projects
# uncomment the urls if you wish to display them, and add your own URL

# Augmented Random Search
- project: Walking Half-Cheetah using Augmented Random Search
  role: Primary Developer
  #duration: 2018 &mdash; Present
  url: "https://github.com/arjunsurendran24/Augmented-Random-Search"
  description: Taught Half-Cheetah to walk on its own using Augmented Random Search Algorithm implemented in numpy.

# Image Generation
- project: Image Generation using Generative Adverserial Network
  role: Primary Developer
  #duration: 2012 &mdash; Present
  url: "https://drive.google.com/file/d/1VAV_LpGhFaIzPZ04QS2alpz66Nsp2rcf/view?usp=sharing"
  description: Generative Adverserial Network implemented in TensorFlow using Improved Wasserstein Algorithm. Trained on MNIST dataset for 100,000 iterations.

# Denoicing of Documents
- project: Denoising of Documents using Image Painting with Deep Neural Network
  role: Primary Developer
  #duration: 2007 &mdash; Present
  url: "https://github.com/arjunsurendran24/Denoising-of-Documents"
  description: Deep Neural Network is used to remove noise from images. The NN is implemented using TensorFlow and the dataset is obtained from Kaggle.

# Web View Forecasting
- project: Web View Forecasting using Recurrent Neural Networks
  role: Primary Developer
  #duration: 2007 &mdash; Present
  url: "https://github.com/arjunsurendran24/Predicting-Web-View-Using-LSTM"
  description: Implemented RNN in Python using Keras library

# Finding Duplicates
- project: Finding Duplicates in Text using NLTK and Gradient Boosting
  role: Primary Developer
  #duration: 2007 &mdash; Present
  url: "https://github.com/arjunsurendran24/Finding-Duplicates-in-Quora-Questions-Using-NLTK-and-Gradient-Boosting"
  description: Used methods in NLTK for cleaning the text. Prediction is made using Gradient Boosting Classifier from sci-kit learn.

# Digit Recognizer
- project: Digit Recognizer using Neural Network.
  role: Primary Developer
  #duration: 2007 &mdash; Present
  url: "https://github.com/arjunsurendran24/MNIST-Digit-Recognizer-using-Convolutional-Neural-Network"
  description: Convolutional Neural Network was trained on 42000 inputs with an accuracy of 99.73% and tested on 28000 inputs with an accuracy of 98.5%.

# Face Detection
- project: Face Detection in crowd using OpenCV
  role: Primary Developer
  #duration: 2012 &mdash; Present
  url: "https://github.com/arjunsurendran24/Face-Detection-in-crowd-using-OpenCV"
  description: Face Detection implemented in Video using Haar Cascade Classifier.

# LED Lighting and Communication System
- project: LED Lighting and Communication System
  role: Software Developer
  #duration: 2007 &mdash; Present
  #url: "https://github.com/arjunsurendran24/Denoising-of-Documents"
  description: A new communication system incorporating principles of Power Line Communication and Visible Light Communication for intra-building networks.
